{"summary":"<blockquote><p>基于Git的工作流</p>\n</blockquote>\n<a id=\"more\"></a>\n<h1 id=\"版本一\"><a href=\"#版本一\" class=\"headerlink\" title=\"版本一\"></a>版本一</h1><h2 id=\"现有分支介绍\"><a href=\"#现有分支介绍\" class=\"headerlink\" title=\"现有分支介绍\"></a>现有分支介绍</h2><ul>\n<li><code>master</code>：主分支，有且仅有一条，只允许存在已发布到生产环境的代码</li>\n<li><code>features</code>：功能特性分支，开发者自行命名，每个需求或功能模块新开一支，一般情况下，开发者和分支为<code>1:m</code>的关系，特殊情况可由两人或以上开发同一分支<ul>\n<li><strong><code>features</code>分支命名建议以<code>product/feature</code>格式命名，同一产品使用相同产品名，便于查看和管理，例如：家装节有新需求做一个分享的功能，分支命名可以为<code>tuan/share</code></strong></li>\n</ul>\n</li>\n<li><code>bugs</code>：（不常用）线上出现严重 bug 时须新开分支进行修复，一般应保证代码的充分测试，尽可能避免创建 bugs 分支</li>\n<li><code>origin/master</code>, <code>origin/features</code>：远程主分支，公司远程代码仓库分支，功能同本地同名分支，现阶段主要用作备份</li>\n</ul>\n<h2 id=\"Workflow\"><a href=\"#Workflow\" class=\"headerlink\" title=\"Workflow\"></a>Workflow</h2><p><span style=\"color: red;\">禁止直接在<code>master</code>分支上开发任何功能，仅允许修复非功能性 bug （例如文案错误）时修改该分支</span></p>\n<h3 id=\"日常开发流程\"><a href=\"#日常开发流程\" class=\"headerlink\" title=\"日常开发流程\"></a>日常开发流程</h3><ul>\n<li><code>git pull --rebase origin master</code>——拉取远程<code>master</code>分支<ul>\n<li><code>--rebase</code>为变基合并（<a href=\"http://www.cnblogs.com/kevingrace/p/5896706.html\" target=\"_blank\" rel=\"external\">简单对比git pull和git pull –rebase的使用</a>）<code>master</code>分支理论上应与本地保持完全一致，使用变基可以减少无意义的合并*</li>\n</ul>\n</li>\n<li>切换到自己需求的分支进行开发 <code>git checkout product/feature</code></li>\n<li><code>git commit -a -m &quot;详细提交记录&quot;</code>——强烈建议提交日志写越详细越好，方便后续的 查错/修改 定位</li>\n<li>每日下班前将当日所有代码提交到远程仓库 <code>git push origin product/feature</code></li>\n</ul>\n<h3 id=\"新需求开发流程\"><a href=\"#新需求开发流程\" class=\"headerlink\" title=\"新需求开发流程\"></a>新需求开发流程</h3><ul>\n<li>新建分支<code>product/feature</code>：<code>git checkout -b product/feature</code></li>\n<li>编码</li>\n<li>测试</li>\n<li>发布</li>\n<li>切换分支至<code>master</code>并合并<code>product/feature</code>分支：<ul>\n<li><code>git checkout master</code>——切换到<code>master</code>分支</li>\n<li><code>git merge product/feature</code>——合并分支<ul>\n<li>如遇代码冲突，解决冲突后执行<code>git merge --continue</code></li>\n</ul>\n</li>\n<li><code>git push origin master</code>——推送到远程仓库</li>\n<li><code>git branch -d product/feature</code>——删除功能分支</li>\n<li><code>git push origin :product/feature</code>——删除远程功能分支</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"协作开发流程\"><a href=\"#协作开发流程\" class=\"headerlink\" title=\"协作开发流程\"></a>协作开发流程</h3><ol>\n<li>拉取远程分支 <code>git pull --rebase origin product/feature</code></li>\n<li>2-5. 同新需求流程</li>\n</ol>\n"}