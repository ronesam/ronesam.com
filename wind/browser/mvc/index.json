{"summary":"<blockquote><p>模型 - 视图 - 控制器（<strong>Model - View - Controller</strong>）已经成为我们最常引用（以及最常误引用）的模式。<strong>MVC</strong> 起源于20世纪70年代的后期，它开始时只是一个由 <strong>Trygve Reenskaug</strong> 为 <strong>Smalltall</strong> 平台开发的框架。从那以后，在大多数<strong>UI</strong>框架和<strong>UI</strong>设计思路中，它都扮演着非常重要的角色。</p>\n<footer><strong>Martin Fowler</strong><cite>企业应用架构模式</cite></footer></blockquote>\n<a id=\"more\"></a>\n<p>不幸的是，十多年过去了，<strong>MVC</strong>依然是<strong>“我们最常引用（以及最常误引用）的模式”</strong>。</p>\n<p>甚至于，情况越发严重起来。</p>\n<p>我们不但多了 <strong>MVVM</strong> 的概念（微软的）；更甚至于，<strong>Django</strong> 宣称它是基于 <strong>MVT</strong> 的；<strong>AngularJs</strong> 则彻底崩溃，直接喊出：算了，管他呢，你爱叫啥叫啥吧 （<strong>Model - View - Whatever</strong>）。</p>\n<p>完整起见，如果你真的想了解，可以参考以下网页：</p>\n<ul>\n<li><a href=\"http://stackoverflow.com/tags/model-view-controller/info\" target=\"_blank\" rel=\"external\">MVC - Model-View-Controller</a></li>\n<li><a href=\"http://stackoverflow.com/tags/mvp/info\" target=\"_blank\" rel=\"external\">MVP - Model-View-Presenter</a></li>\n<li><a href=\"http://stackoverflow.com/tags/mvvm/info\" target=\"_blank\" rel=\"external\">MVVM - Model-View-ViewModel</a></li>\n<li><a href=\"https://plus.google.com/+AngularJS/posts/aZNVhj355G2\" target=\"_blank\" rel=\"external\">MVW / MV* - Model-View-Whatever</a></li>\n<li><a href=\"http://stackoverflow.com/tags/hmvc/info\" target=\"_blank\" rel=\"external\">HMVC - Hierarchical Model-View-Controller</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Multiuse_Model_View\" target=\"_blank\" rel=\"external\">MMV - Multiuse Model View</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93adapter\" target=\"_blank\" rel=\"external\">MVA - Model-View-Adapter</a></li>\n</ul>\n<p>恩，反正我是受够了。</p>\n<blockquote>\n<p>考虑MVC的时候，我关注两个主要的分离：从模型中分离表现和从视图中分离控制器。</p>\n</blockquote>\n<h2 id=\"从模型中分离表现\"><a href=\"#从模型中分离表现\" class=\"headerlink\" title=\"从模型中分离表现\"></a>从模型中分离表现</h2>"}