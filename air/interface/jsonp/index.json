{"summary":"<blockquote><p>JSON(JavaScript Object Notation) 是一种轻量级的数据交换格式。它使得人们很容易的进行阅读和编写。同时也方便了机器进行解析和生成。它是基于 JavaScript Programming Language , Standard ECMA-262 3rd Edition - December 1999 的一个子集。 JSON采用完全独立于程序语言的文本格式，但是也使用了类C语言的习惯（包括C, C++, C#, Java, JavaScript, Perl, Python等）。这些特性使JSON成为理想的数据交换语言。</p>\n<footer><strong>JSON中国</strong><cite><a href=\"http://www.json.org.cn/\" target=\"_blank\" rel=\"external\">www.json.org.cn</a></cite></footer></blockquote>\n<a id=\"more\"></a>\n<p>和AJAX一样，<code>JSON</code>和<code>JSONP</code>也不是什么新东西。</p>\n<p>我们知道，<code>JavaScript</code>有六种基本数据类型，并可以用<code>typeof</code>来检测：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">switch</span> (<span class=\"keyword\">typeof</span>(var_name))&#123;</div><div class=\"line\">  <span class=\"keyword\">case</span> <span class=\"string\">'undefined'</span>:</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'未定义值'</span>);</div><div class=\"line\">    <span class=\"keyword\">break</span>;</div><div class=\"line\">  <span class=\"keyword\">case</span> <span class=\"string\">'boolean'</span>:</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'布尔值'</span>);</div><div class=\"line\">    <span class=\"keyword\">break</span>;</div><div class=\"line\">  <span class=\"keyword\">case</span> <span class=\"string\">'string'</span>:</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'字符串'</span>);</div><div class=\"line\">    <span class=\"keyword\">break</span>;</div><div class=\"line\">  <span class=\"keyword\">case</span> <span class=\"string\">'number'</span>:</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'数值'</span>);</div><div class=\"line\">    <span class=\"keyword\">break</span>;</div><div class=\"line\">  <span class=\"keyword\">case</span> <span class=\"string\">'function'</span>:</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'函数'</span>);</div><div class=\"line\">    <span class=\"keyword\">break</span>;</div><div class=\"line\">  <span class=\"keyword\">case</span> <span class=\"string\">'object'</span>:</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'对象或null'</span>);</div><div class=\"line\">    <span class=\"keyword\">break</span>;  </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><code>JSON</code>就是<code>JavaScript Object</code>，但<code>JavaScript Object</code>却并不一定是<code>JSON</code>。</p>\n<p>我们可以通过如下方式定义一个<code>JavaScript Object</code>:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  a: <span class=\"literal\">undefined</span>,</div><div class=\"line\">  b: <span class=\"literal\">true</span>,</div><div class=\"line\">  c: <span class=\"number\">1</span>,</div><div class=\"line\">  d: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\"></div><div class=\"line\">     &#125;,</div><div class=\"line\">  e: &#123;</div><div class=\"line\"></div><div class=\"line\">     &#125;,</div><div class=\"line\">  f: [],</div><div class=\"line\">  g: <span class=\"literal\">null</span></div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<p>文章开头的引文中提到：</p>\n<blockquote>\n<p>JSON(JavaScript Object Notation) 是一种轻量级的<strong>数据交换格式</strong>。</p>\n</blockquote>\n<p>既然是<strong>交换格式</strong>，意味着必须通用。</p>\n<p>上述定义中：</p>\n<ul>\n<li><code>a: undefined</code>：定义一个未定义的变量（这话透着别扭）；</li>\n<li><code>d: function(){}</code>：定义一个函数字面量；</li>\n</ul>\n<p>并非所有其它语言通用的做法。将它们剔除掉，剩下的就是一串标准的<code>JSON</code>：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  b: <span class=\"literal\">true</span>,</div><div class=\"line\">  c: <span class=\"number\">1</span></div><div class=\"line\">  e: &#123;</div><div class=\"line\"></div><div class=\"line\">     &#125;,</div><div class=\"line\">  f: [],</div><div class=\"line\">  g: <span class=\"literal\">null</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>那么什么又是<code>JSONP（JSON with Padding）</code>呢？</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> JSONP=<span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"script\"</span>);  </div><div class=\"line\">JSONP.type=<span class=\"string\">\"text/javascript\"</span>;  </div><div class=\"line\">JSONP.src=<span class=\"string\">\"http://crossdomain.com/services.php?callback=jsonpCallback\"</span>;  </div><div class=\"line\"><span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">\"head\"</span>)[<span class=\"number\">0</span>].appendChild(JSONP);</div></pre></td></tr></table></figure>"}