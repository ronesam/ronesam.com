{"summary":"<blockquote><p>You thought you only had two problems……<br>你以为你只有一两个问题……</p>\n<footer><strong>Jeff Avallone</strong><cite><a href=\"http://regexper.com/\" target=\"_blank\" rel=\"external\">regexper</a></cite></footer></blockquote>\n<a id=\"more\"></a>\n<style type=\"text/css\">textarea {\n  font-size: 1em;\n  color: #222;\n  line-height: 1.5em;\n  border: 0px none;\n  border-radius: 4px;\n  outline: medium none;\n  background: #CBCBBA none repeat scroll 0% 0%;\n  padding: 0.7em;\n  width: 100% !important;\n  box-sizing: border-box;\n  font-family: Consolas,Monaco,Lucida Console,Liberation Mono,DejaVu Sans Mono,Bitstream Vera Sans Mono,Courier New,monospace;\n}\narticle.match {\n  text-align: left;\n}\narticle.match ol ul {\n  margin-left: 0;\n  margin-top: 30px;\n  border-bottom: 1px dashed #6C7989;\n} \narticle.match ol ul li {\n  padding-bottom: 20px\n}\ntable.wikitable {\n  border-collapse: collapse;\n}\n.wikitable tr { \n  border-bottom: 1px dashed #6C7989;\n}\n.wikitable tr:hover{ \n  background-color: #39B3D7;\n  color: #FFF;\n}\n.wikitable td { \n  line-height: 2em;\n  padding: 5px 0;\n  font-size: 0.8em;\n  text-align:left\n}\n.wikitable th {\n  text-align: center;\n  font-size: 0.9em;\n}</style>\n<div class=\"hexo-insert-code\"><textarea autofocus=\"autofocus\" placeholder=\"Enter something that u want to match\" id=\"match-input\" rows=\"5\"></textarea>\n<textarea id=\"regexp-input\" placeholder=\"Enter JavaScript-style regular expression to display\" rows=\"2\">/(\\s*)(`{3,}|~{3,}) *(.*) *\\n?([\\s\\S]*?)\\s*(\\2)(\\n+|$)/g</textarea>\n<div style=\"margin:1.2em 0\">\n  <a class=\"btn btn-success\" id=\"regexper\"><i class=\"fa fa-spinner fa-pulse\"></i>Have a look</a>\n  <a class=\"btn btn-info\" data-remodal-target=\"match\" id=\"match\"><i class=\"fa fa-send\"></i>Match</a>\n  <a class=\"btn btn-link\" data-remodal-target=\"quick\">速查表</a>\n</div>\n<div data-remodal-id=\"match\" class=\"remodal\" data-remodal-options=\"hashTracking: false\">\n  <button data-remodal-action=\"close\" class=\"remodal-close\"></button>\n  <div style=\"font-size: 1.5em\">匹配结果</div>\n  <article class=\"match\">\n    <div id=\"regexper-result\"></div>\n    <span style=\"font-weight:bold\">第 <i id=\"found-times\"></i> 次查找。共找到 <i id=\"match-times\"></i> 处匹配。</span>\n    <ol id=\"match-result\" style=\"display:none;height:360px;overflow-y:auto;margin-top: 1em\"></ol>\n  </article>\n</div>\n<div data-remodal-id=\"quick\" class=\"remodal\" data-remodal-options=\"hashTracking: false\">\n  <button data-remodal-action=\"close\" class=\"remodal-close\"></button>\n  <div style=\"font-size: 1.5em;margin-top:1em\">正则表达式速查表</div>\n  <article style=\"height: 600px;overflow-y:auto\">\n    <table class=\"wikitable\">\n      <tbody>\n        <tr>\n          <th width=\"7%\" style=\"font-size:18px\">字符</th>\n          <th width=\"93%\" style=\"font-size:18px\">描述</th>\n        </tr>\n        <tr>\n          <th>\\</th>\n          <td>将下一个字符标记为一个特殊字符、或一个原义字符、或一个向后引用、或一个八进制转义符。例如，&ldquo;<code>n</code>”匹配字符“<code>n</code>”。“<code>\\n</code>”匹配一个换行符。串行“<code>\\\\</code>”匹配“<code>\\</code>”而“<code>\\(</code>”则匹配“<code>(</code>”。</td>\n        </tr>\n        <tr>\n          <th>^</th>\n          <td>匹配输入字符串的开始位置。如果设置了RegExp对象的Multiline属性，^也匹配&ldquo;<code>\\n</code>”或“<code>\\r</code>”之后的位置。</td>\n        </tr>\n        <tr>\n          <th>$</th>\n          <td>匹配输入字符串的结束位置。如果设置了RegExp对象的Multiline属性，$也匹配&ldquo;<code>\\n</code>”或“<code>\\r</code>”之前的位置。</td>\n        </tr>\n        <tr>\n          <th>*</th>\n          <td>匹配前面的子表达式零次或多次。例如，zo*能匹配&ldquo;<code>z</code>”以及“<code>zoo</code>”。*等价于{0,}。</td>\n        </tr>\n        <tr>\n          <th>+</th>\n          <td>匹配前面的子表达式一次或多次。例如，&ldquo;<code>zo+</code>”能匹配“<code>zo</code>”以及“<code>zoo</code>”，但不能匹配“<code>z</code>”。+等价于{1,}。</td>\n        </tr>\n        <tr>\n          <th>?</th>\n          <td>匹配前面的子表达式零次或一次。例如，&ldquo;<code>do(es)?</code>”可以匹配“<code>does</code>”或“<code>does</code>”中的“<code>do</code>”。?等价于{0,1}。</td>\n        </tr>\n        <tr>\n          <th>{<span>n</span>}</th>\n          <td><span>n</span>是一个非负整数。匹配确定的<span>n</span>次。例如，&ldquo;<code>o{2}</code>”不能匹配“<code>Bob</code>”中的“<code>o</code>”，但是能匹配“<code>food</code>”中的两个o。</td>\n        </tr>\n        <tr>\n          <th>{<span>n</span>,}</th>\n          <td><span>n</span>是一个非负整数。至少匹配<span>n</span>次。例如，&ldquo;<code>o{2,}</code>”不能匹配“<code>Bob</code>”中的“<code>o</code>”，但能匹配“<code>foooood</code>”中的所有o。“<code>o{1,}</code>”等价于“<code>o+</code>”。“<code>o{0,}</code>”则等价于“<code>o*</code>”。</td>\n        </tr>\n        <tr>\n          <th>{<span>n</span>,<span>m</span>}</th>\n          <td><span>m</span>和<span>n</span>均为非负整数，其中<span>n</span>&lt;=<span>m</span>。最少匹配<span>n</span>次且最多匹配<span>m</span>次。例如，&ldquo;<code>o{1,3}</code>”将匹配“<code>fooooood</code>”中的前三个o。“<code>o{0,1}</code>”等价于“<code>o?</code>”。请注意在逗号和两个数之间不能有空格。</td>\n        </tr>\n        <tr>\n          <th>?</th>\n          <td>当该字符紧跟在任何一个其他限制符（*,+,?，{<span>n</span>}，{<span>n</span>,}，{<span>n</span>,<span>m</span>}）后面时，匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。例如，对于字符串&ldquo;<code>oooo</code>”，“<code>o+?</code>”将匹配单个“<code>o</code>”，而“<code>o+</code>”将匹配所有“<code>o</code>”。</td>\n        </tr>\n        <tr>\n          <th>.</th>\n          <td>匹配除&ldquo;<code>\\</code><span><code>n</code></span>”之外的任何单个字符。要匹配包括“<code>\\</code><span><code>n</code></span>”在内的任何字符，请使用像“<code>(.|\\n)</code>”的模式。</td>\n        </tr>\n        <tr>\n          <th>(pattern)</th>\n          <td>匹配pattern并获取这一匹配。所获取的匹配可以从产生的Matches集合得到，在VBScript中使用SubMatches集合，在JScript中则使用$0&hellip;$9属性。要匹配圆括号字符，请使用&ldquo;<code>\\(</code>”或“<code>\\)</code>”。</td>\n        </tr>\n        <tr>\n          <th>(?:pattern)</th>\n          <td>匹配pattern但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。这在使用或字符&ldquo;<code>(|)</code>”来组合一个模式的各个部分是很有用。例如“<code>industr(?:y|ies)</code>”就是一个比“<code>industry|industries</code>”更简略的表达式。</td>\n        </tr>\n        <tr>\n          <th>(?=pattern)</th>\n          <td>正向肯定预查，在任何匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，&ldquo;<code>Windows(?=95|98|NT|2000)</code>”能匹配“<code>Windows2000</code>”中的“<code>Windows</code>”，但不能匹配“<code>Windows3.1</code>”中的“<code>Windows</code>”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。</td>\n        </tr>\n        <tr>\n          <th>(?!pattern)</th>\n          <td>正向否定预查，在任何不匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如&ldquo;<code>Windows(?!95|98|NT|2000)</code>”能匹配“<code>Windows3.1</code>”中的“<code>Windows</code>”，但不能匹配“<code>Windows2000</code>”中的“<code>Windows</code>”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。</td>\n        </tr>\n        <tr>\n          <th>(?&lt;=pattern)</th>\n          <td>反向肯定预查，与正向肯定预查类拟，只是方向相反。例如，&ldquo;<code>(?&lt;=95|98|NT|2000)Windows</code>”能匹配“<code>2000Windows</code>”中的“<code>Windows</code>”，但不能匹配“<code>3.1Windows</code>”中的“<code>Windows</code>”。</td>\n        </tr>\n        <tr>\n          <th>(?&lt;!pattern)</th>\n          <td>反向否定预查，与正向否定预查类拟，只是方向相反。例如&ldquo;<code>(?&lt;!95|98|NT|2000)Windows</code>”能匹配“<code>3.1Windows</code>”中的“<code>Windows</code>”，但不能匹配“<code>2000Windows</code>”中的“<code>Windows</code>”。</td>\n        </tr>\n        <tr>\n          <th>x|y</th>\n          <td>匹配x或y。例如，&ldquo;<code>z|food</code>”能匹配“<code>z</code>”或“<code>food</code>”。“<code>(z|f)ood</code>”则匹配“<code>zood</code>”或“<code>food</code>”。</td>\n        </tr>\n        <tr>\n          <th>[xyz]</th>\n          <td>字符集合。匹配所包含的任意一个字符。例如，&ldquo;<code>[abc]</code>”可以匹配“<code>plain</code>”中的“<code>a</code>”。</td>\n        </tr>\n        <tr>\n          <th>[^xyz]</th>\n          <td>负值字符集合。匹配未包含的任意字符。例如，&ldquo;<code>[^abc]</code>”可以匹配“<code>plain</code>”中的“<code>p</code>”。</td>\n        </tr>\n        <tr>\n          <th>[a-z]</th>\n          <td>字符范围。匹配指定范围内的任意字符。例如，&ldquo;<code>[a-z]</code>”可以匹配“<code>a</code>”到“<code>z</code>”范围内的任意小写字母字符。</td>\n        </tr>\n        <tr>\n          <th>[^a-z]</th>\n          <td>负值字符范围。匹配任何不在指定范围内的任意字符。例如，&ldquo;<code>[^a-z]</code>”可以匹配任何不在“<code>a</code>”到“<code>z</code>”范围内的任意字符。</td>\n        </tr>\n        <tr>\n          <th>\\b</th>\n          <td>匹配一个单词边界，也就是指单词和空格间的位置。例如，&ldquo;<code>er\\b</code>”可以匹配“<code>never</code>”中的“<code>er</code>”，但不能匹配“<code>verb</code>”中的“<code>er</code>”。</td>\n        </tr>\n        <tr>\n          <th>\\B</th>\n          <td>匹配非单词边界。&ldquo;<code>er\\B</code>”能匹配“<code>verb</code>”中的“<code>er</code>”，但不能匹配“<code>never</code>”中的“<code>er</code>”。</td>\n        </tr>\n        <tr>\n          <th>\\cx</th>\n          <td>匹配由x指明的控制字符。例如，\\cM匹配一个Control-M或回车符。x的值必须为A-Z或a-z之一。否则，将c视为一个原义的&ldquo;<code>c</code>”字符。</td>\n        </tr>\n        <tr>\n          <th>\\d</th>\n          <td>匹配一个数字字符。等价于[0-9]。</td>\n        </tr>\n        <tr>\n          <th>\\D</th>\n          <td>匹配一个非数字字符。等价于[^0-9]。</td>\n        </tr>\n        <tr>\n          <th>\\f</th>\n          <td>匹配一个换页符。等价于\\x0c和\\cL。</td>\n        </tr>\n        <tr>\n          <th>\\n</th>\n          <td>匹配一个换行符。等价于\\x0a和\\cJ。</td>\n        </tr>\n        <tr>\n          <th>\\r</th>\n          <td>匹配一个回车符。等价于\\x0d和\\cM。</td>\n        </tr>\n        <tr>\n          <th>\\s</th>\n          <td>匹配任何空白字符，包括空格、制表符、换页符等等。等价于[ \\f\\n\\r\\t\\v]。</td>\n        </tr>\n        <tr>\n          <th>\\S</th>\n          <td>匹配任何非空白字符。等价于[^ \\f\\n\\r\\t\\v]。</td>\n        </tr>\n        <tr>\n          <th>\\t</th>\n          <td>匹配一个制表符。等价于\\x09和\\cI。</td>\n        </tr>\n        <tr>\n          <th>\\v</th>\n          <td>匹配一个垂直制表符。等价于\\x0b和\\cK。</td>\n        </tr>\n        <tr>\n          <th>\\w</th>\n          <td>匹配包括下划线的任何单词字符。等价于&ldquo;<code>[A-Za-z0-9_]</code>”。</td>\n        </tr>\n        <tr>\n          <th>\\W</th>\n          <td>匹配任何非单词字符。等价于&ldquo;<code>[^A-Za-z0-9_]</code>”。</td>\n        </tr>\n        <tr>\n          <th>\\x<span>n</span></th>\n            <td>匹配<span>n</span>，其中<span>n</span>为十六进制转义值。十六进制转义值必须为确定的两个数字长。例如，&ldquo;<code>\\x41</code>”匹配“<code>A</code>”。“<code>\\x041</code>”则等价于“<code>\\x04&amp;1</code>”。正则表达式中可以使用ASCII编码。</td>\n        </tr>\n        <tr>\n          <th>\\<span>num</span></th>\n          <td>匹配<span>num</span>，其中<span>num</span>是一个正整数。对所获取的匹配的引用。例如，&ldquo;<code>(.)\\1</code>”匹配两个连续的相同字符。</td>\n        </tr>\n        <tr>\n          <th>\\<span>n</span></th>\n          <td>标识一个八进制转义值或一个向后引用。如果\\<span>n</span>之前至少<span>n</span>个获取的子表达式，则<span>n</span>为向后引用。否则，如果<span>n</span>为八进制数字（0-7），则<span>n</span>为一个八进制转义值。</td>\n        </tr>\n        <tr>\n          <th>\\<span>nm</span></th>\n          <td>标识一个八进制转义值或一个向后引用。如果\\<span>nm</span>之前至少有<span>nm</span>个获得子表达式，则<span>nm</span>为向后引用。如果\\<span>nm</span>之前至少有<span>n</span>个获取，则<span>n</span>为一个后跟文字<span>m</span>的向后引用。如果前面的条件都不满足，若<span>n</span>和<span>m</span>均为八进制数字（0-7），则\\<span>nm</span>将匹配八进制转义值<span>nm</span>。</td>\n        </tr>\n        <tr>\n          <th>\\<span>nml</span></th>\n          <td>如果<span>n</span>为八进制数字（0-3），且<span>m和l</span>均为八进制数字（0-7），则匹配八进制转义值<span>nm</span>l。</td>\n        </tr>\n        <tr>\n          <th>\\u<span>n</span></th>\n          <td>匹配<span>n</span>，其中<span>n</span>是一个用四个十六进制数字表示的Unicode字符。例如，\\u00A9匹配版权符号（&copy;）。</td>\n        </tr>\n      </tbody>\n    </table>\n  </article>\n</div>\n<div id=\"regexper-render\">\n<svg id=\"svg\" style=\"display:none\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" version=\"1.1\">\n  <defs>\n    <style type=\"text/css\">\n      svg{background-color:#fff}\n      text,tspan{font:12px Arial}\n      path{fill-opacity:0;stroke-width:2px;stroke:#000}\n      circle{fill:#6b6659;stroke-width:2px;stroke:#000}\n      .anchor text,.any-character text{fill:#fff}\n      .anchor rect,.any-character rect{fill:#6b6659}\n      .escape text,.charset-escape text,.literal text{fill:#000}\n      .escape rect,.charset-escape rect{fill:#bada55}\n      .literal rect{fill:#dae9e5}\n      .charset .charset-box{fill:#cbcbba}\n      .subexp .subexp-label tspan,.charset .charset-label tspan,.match-fragment .repeat-label tspan{font-size:10px}\n      .subexp .subexp-label tspan,.charset .charset-label tspan{dominant-baseline:text-after-edge}\n      .subexp .subexp-box{stroke:#908c83;stroke-dasharray:6,2;stroke-width:2px;fill-opacity:0}\n      .quote{fill:#908c83}\n    </style>\n  </defs>\n  <metadata>\n    <rdf:rdf>\n      <cc:license rdf:about=\"http://creativecommons.org/licenses/by/3.0/\">\n        <cc:permits rdf:resource=\"http://creativecommons.org/ns#Reproduction\">\n        <cc:permits rdf:resource=\"http://creativecommons.org/ns#Distribution\">\n        <cc:requires rdf:resource=\"http://creativecommons.org/ns#Notice\">\n        <cc:requires rdf:resource=\"http://creativecommons.org/ns#Attribution\">\n        <cc:permits rdf:resource=\"http://creativecommons.org/ns#DerivativeWorks\">\n      </cc:permits></cc:requires></cc:requires></cc:permits></cc:permits></cc:license>\n    </rdf:rdf>\n  </metadata>\n</svg>\n</div></div>\n<script src=\"http://cdn.bootcss.com/snap.svg/0.4.1/snap.svg-min.js\"></script>\n<script type=\"text/javascript\" src=\"/static/js/regexper.js\"></script>\n<script type=\"text/javascript\" src=\"/static/js/matcher.js\"></script>"}