{"summary":"<blockquote><p>规范之所以是规范, 它没有对错, 只是为了让所有人保持一致.</p>\n</blockquote>\n<a id=\"more\"></a>\n<h2 id=\"命名规范\"><a href=\"#命名规范\" class=\"headerlink\" title=\"命名规范\"></a>命名规范</h2><h3 id=\"kebab-case\"><a href=\"#kebab-case\" class=\"headerlink\" title=\"kebab-case\"></a>kebab-case</h3><ul>\n<li>目录名，文件名和哈希值：<code>[location.pathname &amp;&amp; location.hash]</code></li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">kebab-case-dir/kebab-case-file[<span class=\"string\">-v*</span>][<span class=\"symbol\">.md5</span>][<span class=\"string\">.min</span>].[php|html|js|css|png]?ver=3.1.2#kebab-case</div></pre></td></tr></table></figure>\n<blockquote>\n<ul>\n<li>如果带版本，则文件名只写大版本（<code>v3</code>），小版本体现在<code>URI</code>中（<code>ver=3.1.2</code>）；使用<code>ver</code>做变量，不要用<code>version</code></li>\n<li>目录名和文件名全部小写且禁止加上复数形式<ul>\n<li>例如：orders -&gt; order-list</li>\n</ul>\n</li>\n<li>文件名可以使用大驼峰；目录名最好使用子目录。尽量不要使用下划线</li>\n<li>类名：<code>.kebab-case</code></li>\n<li>ID名：<code>#kebab-case</code></li>\n</ul>\n</blockquote>\n<h3 id=\"snake-case\"><a href=\"#snake-case\" class=\"headerlink\" title=\"snake_case\"></a>snake_case</h3><ul>\n<li>查询串：<code>[location.query]</code></li>\n</ul>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">user-info.js?<span class=\"attribute\">user_name</span>=ronesam&amp;user_city=杭州</div></pre></td></tr></table></figure>\n<ul>\n<li>表单名：<code>input[name=&#39;snake_case&#39;]</code>。</li>\n</ul>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;input <span class=\"attribute\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attribute\">name</span>=<span class=\"string\">\"snake_case\"</span> <span class=\"attribute\">id</span>=<span class=\"string\">\"kebab-case\"</span> <span class=\"attribute\">class</span>=<span class=\"string\">\"kebab-case\"</span> <span class=\"attribute\">value</span>=<span class=\"string\">\"1\"</span> /&gt;</div></pre></td></tr></table></figure>\n<ul>\n<li><code>json</code>的<code>key</code>值</li>\n</ul>\n<figure class=\"highlight xquery\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  <span class=\"string\">'snake_case'</span>: <span class=\"string\">'value'</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<ul>\n<li>变量</li>\n<li>常量（大写即可：<code>SNAKE_CASE</code>）</li>\n<li>属性（$this-&gt;class_field）</li>\n<li>参数（实参：<code>arum_case</code>；形参：<code>parm_case</code>）</li>\n</ul>\n<h3 id=\"camelCase\"><a href=\"#camelCase\" class=\"headerlink\" title=\"camelCase\"></a>camelCase</h3><ul>\n<li>函数（<code>functionCase</code>）</li>\n<li>方法（<code>methodCase</code>）</li>\n</ul>\n<h3 id=\"CamelCase\"><a href=\"#CamelCase\" class=\"headerlink\" title=\"CamelCase\"></a>CamelCase</h3><ul>\n<li>类 （<code>ClassCase</code>）</li>\n</ul>\n<h3 id=\"mixed\"><a href=\"#mixed\" class=\"headerlink\" title=\"mixed\"></a>mixed</h3><ul>\n<li><code>.J_kebab-case</code> <blockquote>\n<p>注意：仅供JS使用，不在CSS中出现</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"格式规范\"><a href=\"#格式规范\" class=\"headerlink\" title=\"格式规范\"></a>格式规范</h2><ul>\n<li>[空格]：2个空格，不用4空格和<code>Tab</code></li>\n<li>[插件]：<code>Sublime</code>使用<code>HTML/CSS/JS Pretty</code>（<code>Ctrl + Alt + H</code>）和<code>PHPFMT</code>（开启<code>PSR-1&amp;PSR-2</code>，<code>ctrl+F11</code>）来格式化即可；<code>PHPStorm（WebStorm）</code>使用<code>Ctrl + Alt + L</code>来格式化</li>\n<li>[引号]：如无特殊要求，代码中统一使用单引号，<code>HTML</code>属性值使用双引号</li>\n<li>[URI]：<code>URI</code>禁止使用相对路径，必须是绝对路径，且最好是<code>//static.tugou.com/user/user-info.js</code>形式的路径</li>\n</ul>\n<h2 id=\"动词规范（增删改查）\"><a href=\"#动词规范（增删改查）\" class=\"headerlink\" title=\"动词规范（增删改查）\"></a>动词规范（增删改查）</h2><ul>\n<li><code>View</code><ul>\n<li><code>Append</code></li>\n<li><code>Remove</code></li>\n<li><code>Edit</code><ul>\n<li><code>Modify</code></li>\n</ul>\n</li>\n<li><code>Show</code><ul>\n<li><code>Change</code> </li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code>Controller</code><ul>\n<li><code>Post</code></li>\n<li><code>Delete</code></li>\n<li><code>Put</code></li>\n<li><code>Get</code> （最好用名词取代，代表各种资源）</li>\n</ul>\n</li>\n<li><code>Service</code> and <code>Logic</code>  <ul>\n<li><code>Add</code><ul>\n<li><code>Delete</code></li>\n<li><code>Set</code></li>\n<li><code>Fetch</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code>Model</code><ul>\n<li><code>Create</code></li>\n<li><code>Delete</code>  </li>\n<li><code>Update</code></li>\n<li><code>Read</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"返回规范\"><a href=\"#返回规范\" class=\"headerlink\" title=\"返回规范\"></a>返回规范</h2><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  <span class=\"attribute\">status</span>: <span class=\"number\">0</span>, <span class=\"comment\">// 接口访问成功或者失败的状态码，成功为0，失败为其它状态码，默认为-1</span></div><div class=\"line\">  <span class=\"attribute\">message</span>: <span class=\"string\">''</span>,<span class=\"comment\">// 接口访问错误的时候返回的错误提示文字，访问成功的时候为空字符串</span></div><div class=\"line\">  <span class=\"attribute\">data</span>: &#123;    <span class=\"comment\">// 服务端实际返回的数据</span></div><div class=\"line\"></div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"布局规范\"><a href=\"#布局规范\" class=\"headerlink\" title=\"布局规范\"></a>布局规范</h2><p><img src=\"screenshot_1491550690094.png\" alt=\"HTML5 Element Flowchart\"></p>\n<p><img src=\"screenshot_1491551080241.png\" alt=\"New HTML Tags\"></p>\n<h2 id=\"最佳实践\"><a href=\"#最佳实践\" class=\"headerlink\" title=\"最佳实践\"></a>最佳实践</h2><ul>\n<li>当你配置了<code>__get</code>的时候，别忘了一并配置<code>__isset</code></li>\n</ul>\n<h2 id=\"关于规范\"><a href=\"#关于规范\" class=\"headerlink\" title=\"关于规范\"></a>关于规范</h2><ul>\n<li>关于文件名<ul>\n<li>域名的字符包含：26个英文字母、0-9的阿拉伯数字、英文输入下的“-”连词符</li>\n<li>搜素引擎规范当中：“-”被当做“空格”，“_”被当做“空字符”（参考：<a href=\"http://www.tuicool.com/articles/Iji2q2\" target=\"_blank\" rel=\"external\">关于URL连接符中是用下划线“_”好还是中杠“-”的问题剖析</a>）</li>\n<li>基于以上两点，推而广之，目录名和文件名等使用中横线来分隔</li>\n</ul>\n</li>\n<li>关于变量&amp;&amp;参数<ul>\n<li>数据库存储的时候，表名及其列名，约定俗称，使用“_”来分隔<ul>\n<li>数组、配置以及<code>JSON</code>的键名，在大部分规范中都建议使用“_”来分隔</li>\n<li>基于以上两点，所有的变量名和参数名均使用“_”来分隔</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>关于函数&amp;&amp;类<ul>\n<li>为了明确与变量区分，函数使用小驼峰</li>\n<li>同上理由，类使用大驼峰</li>\n<li>如此一来，只要看名称就能够了解这是一个变量还是函数还是类。<br>总而言之，规范不是大问题，没有规范才是。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"PSR规范\"><a href=\"#PSR规范\" class=\"headerlink\" title=\"PSR规范\"></a>PSR规范</h2><blockquote>\n<p>PSR 是 PHP Standard Recommendations 的简写，由PHP FIG组织制定的 PHP 规范，是 PHP 开发的实践标准。</p>\n<p>PHP FIG，FIG 是 Framework Interoperability Group（框架可互用性小组）的缩写，由几位开源框架的开发者成立于 2009 年，从那开始也选取了很多其他成员进来（包括但不限于Laravel, Joomla, Drupal, Composer, Phalcon, Slim, Symfony, Zend Framework等），虽然不是「官方」组织，但也代表了大部分的 PHP 社区。</p>\n<p>项目的目的在于：通过框架作者或者框架的代表之间讨论，以最低程度的限制，制定一个协作标准，各个框架遵循统一的编码规范，避免各家自行发展的风格阻碍了 PHP 的发展，解决这个程序设计师由来已久的困扰。</p>\n<p>目前已表决通过了 6 套标准，已经得到大部分 PHP 框架的支持和认可。</p>\n<p>本项目的主要面向对象是所有参与的各个成员（也就是各自框架的社区），当然，同时也欢迎其它 PHP 社区采用本规范。</p>\n</blockquote>\n<ul>\n<li><a href=\"https://github.com/PizzaLiu/PHP-FIG/blob/master/PSR-1-basic-coding-standard-cn.md\" target=\"_blank\" rel=\"external\">PSR-1：基本代码规范</a></li>\n<li><a href=\"https://github.com/PizzaLiu/PHP-FIG/blob/master/PSR-2-coding-style-guide-cn.md\" target=\"_blank\" rel=\"external\">PSR-2：代码风格规范</a></li>\n<li><a href=\"https://github.com/PizzaLiu/PHP-FIG/blob/master/PSR-2-coding-style-guide-meta-cn.md\" target=\"_blank\" rel=\"external\">PSR-2：补充文档</a></li>\n</ul>\n"}