{"summary":"<blockquote><p>服务器初始化</p>\n</blockquote>\n<a id=\"more\"></a>\n<h2 id=\"安装NVM\"><a href=\"#安装NVM\" class=\"headerlink\" title=\"安装NVM\"></a>安装NVM</h2><blockquote>\n<p>如果之前已经安装 NodeJs 则需要删除</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm ls -g --depth=0 <span class=\"comment\">#查看已经安装在全局的模块，以便删除这些全局模块后再按照不同的 node 版本重新进行全局安装</span></div><div class=\"line\">$ sudo rm -rf /usr/<span class=\"built_in\">local</span>/lib/node_modules <span class=\"comment\">#删除全局 node_modules 目录</span></div><div class=\"line\">$ sudo rm /usr/<span class=\"built_in\">local</span>/bin/node <span class=\"comment\">#删除 node</span></div><div class=\"line\">$ <span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/bin &amp;&amp; ls -l | grep <span class=\"string\">\"../lib/node_modules/\"</span> | awk <span class=\"string\">'&#123;print $9&#125;'</span>| xargs rm <span class=\"comment\">#删除全局 node 模块注册的软链</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>获取安装文件</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.0/install.sh | bash</div></pre></td></tr></table></figure>\n<blockquote>\n<p>安装完成之后需要重启 ITem2</p>\n<p>配置淘宝镜像并安装<code>LTS</code>版本</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ vim ~/.bashrc</div><div class=\"line\"></div><div class=\"line\">====加入以下代码====</div><div class=\"line\"><span class=\"built_in\">export</span> NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node</div><div class=\"line\"></div><div class=\"line\">$ <span class=\"built_in\">source</span> ~/.bashrc</div><div class=\"line\">$ <span class=\"built_in\">echo</span> <span class=\"variable\">$NVM_NODEJS_ORG_MIRROR</span></div><div class=\"line\"></div><div class=\"line\">$ nvm install v6.11.3 <span class=\"comment\">#安装最新的LTS版本</span></div><div class=\"line\">$ nvm <span class=\"built_in\">alias</span> default v6.11.3</div></pre></td></tr></table></figure>\n<h2 id=\"安装NRM\"><a href=\"#安装NRM\" class=\"headerlink\" title=\"安装NRM\"></a>安装NRM</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install -g nrm --registry=https://registry.npm.taobao.org <span class=\"comment\">#使用淘宝镜像</span></div><div class=\"line\">$ nrm use taobao</div><div class=\"line\">$ npm config get registry</div><div class=\"line\">$ npm i -g npm <span class=\"comment\">#升级 npm 到最新版本</span></div></pre></td></tr></table></figure>\n<h2 id=\"安装-Yarn\"><a href=\"#安装-Yarn\" class=\"headerlink\" title=\"安装 Yarn\"></a>安装 Yarn</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm i -g yarn</div><div class=\"line\">$ yarn config <span class=\"built_in\">set</span> registry https://registry.npm.taobao.org <span class=\"comment\">#淘宝镜像</span></div><div class=\"line\">$ yarn config get registry</div></pre></td></tr></table></figure>\n<h1 id=\"整理-node-sass-安装失败的原因及解决办法\"><a href=\"#整理-node-sass-安装失败的原因及解决办法\" class=\"headerlink\" title=\"整理 node-sass 安装失败的原因及解决办法\"></a><a href=\"https://segmentfault.com/a/1190000010984731\" target=\"_blank\" rel=\"external\">整理 node-sass 安装失败的原因及解决办法</a></h1><blockquote>\n<p>声明：本文非原创，如有侵权请留言或发邮件告知，作者会立即停止侵权并删除本文。发布此文章主要是希望跟作者遇到同样问题的同学能解决node-sass 安装失败的问题。</p>\n</blockquote>\n<p><em>npm install 时偶尔遇到报错：没有安装python或node-sass 安装失败的问题，百度之后发现是被墙了，但根据百度的方法换了淘宝镜像和用了vpn都安装失败，最后发现原来是因为没有卸载之前安装失败的包导致的。作者本人最后的解决方案是npm uninstall node-sass，然后使用VPN重新安装了一遍就成功了。不能翻墙的同学请看下文</em></p>\n<h2 id=\"node-sass-安装失败的原因\"><a href=\"#node-sass-安装失败的原因\" class=\"headerlink\" title=\"node-sass 安装失败的原因\"></a><strong>node-sass 安装失败的原因</strong></h2><p>npm 安装 node-sass 依赖时，会从 github.com 上下载 .node 文件。由于国内网络环境的问题，这个下载时间可能会很长，甚至导致超时失败。<br>这是使用 sass 的同学可能都会遇到的郁闷的问题。</p>\n<p>解决方案就是使用其他源，或者使用工具下载，然后将安装源指定到本地。</p>\n<h2 id=\"解决方法一：创建-npmrc文件\"><a href=\"#解决方法一：创建-npmrc文件\" class=\"headerlink\" title=\"解决方法一：创建.npmrc文件\"></a><strong>解决方法一：创建.npmrc文件</strong></h2><p>在项目根目录创建.npmrc文件，复制下面代码到该文件。</p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">phantomjs_cdnurl=<span class=\"string\">http:</span><span class=\"comment\">//cnpmjs.org/downloads</span></div><div class=\"line\">sass_binary_site=<span class=\"string\">https:</span><span class=\"comment\">//npm.taobao.org/mirrors/node-sass/</span></div><div class=\"line\">registry=<span class=\"string\">https:</span><span class=\"comment\">//registry.npm.taobao.org</span></div></pre></td></tr></table></figure>\n<p>保存后 删除之前安装失败的包(第一次安装请跳过此步)</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm uninstall <span class=\"keyword\">node</span><span class=\"title\">-sass</span></div></pre></td></tr></table></figure>\n<p>重新安装</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install <span class=\"keyword\">node</span><span class=\"title\">-sass</span></div></pre></td></tr></table></figure>\n<p>作者后来另一个项目在没有使用VPN的情况下测试方法一，安装时报错 <em>ERR! node-sass@3.8.0 postinstall: `node scripts/build.js</em> 改用方法二成功。</p>\n<h2 id=\"解决方法二：使用淘宝镜像源\"><a href=\"#解决方法二：使用淘宝镜像源\" class=\"headerlink\" title=\"解决方法二：使用淘宝镜像源\"></a><strong>解决方法二：使用淘宝镜像源</strong></h2><p>设置变量 sass_binary_site，指向淘宝镜像地址。示例：</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm i <span class=\"keyword\">node</span><span class=\"title\">-sass</span> --<span class=\"attr\">sass_binary_site=</span>https://npm.taobao.org/mirrors/<span class=\"keyword\">node</span><span class=\"title\">-sass</span>/</div><div class=\"line\"></div><div class=\"line\">// 也可以设置系统环境变量的方式。示例</div><div class=\"line\">// linux、mac 下</div><div class=\"line\"><span class=\"attr\">SASS_BINARY_SITE=</span>https://npm.taobao.org/mirrors/<span class=\"keyword\">node</span><span class=\"title\">-sass</span>/ npm install <span class=\"keyword\">node</span><span class=\"title\">-sass</span></div><div class=\"line\"></div><div class=\"line\">// window 下</div><div class=\"line\">set <span class=\"attr\">SASS_BINARY_SITE=</span>https://npm.taobao.org/mirrors/<span class=\"keyword\">node</span><span class=\"title\">-sass</span>/ &amp;&amp; npm install <span class=\"keyword\">node</span><span class=\"title\">-sass</span></div></pre></td></tr></table></figure>\n<p>或者设置全局镜像源：</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm config set sass_binary_site https://npm.taobao.org/mirrors/<span class=\"keyword\">node</span><span class=\"title\">-sass</span>/</div></pre></td></tr></table></figure>\n<p>之后再涉及到 node-sass 的安装时就会从淘宝镜像下载。</p>\n<h2 id=\"解决方法三：使用-cnpm\"><a href=\"#解决方法三：使用-cnpm\" class=\"headerlink\" title=\"解决方法三：使用 cnpm\"></a><strong>解决方法三：使用 cnpm</strong></h2><p>使用 cnpm 安装 node-sass 会默认从淘宝镜像源下载，也是一个办法：</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">cnpm install <span class=\"keyword\">node</span><span class=\"title\">-sass</span></div></pre></td></tr></table></figure>\n<h2 id=\"解决方法四：下载-node-到本地\"><a href=\"#解决方法四：下载-node-到本地\" class=\"headerlink\" title=\"解决方法四：下载 .node 到本地\"></a><strong>解决方法四：下载 .node 到本地</strong></h2><p>到<a href=\"https://github.com/sass/node-sass/releases\" target=\"_blank\" rel=\"external\">这里</a>去根据版本号、系统环境，选择下载 .node 文件，然后安装时，指定变量 sass_binary_path，如：</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm i <span class=\"keyword\">node</span><span class=\"title\">-sass</span> --<span class=\"attr\">sass_binary_path=</span>/Users/lzwme/Downloads/darwin-x64-<span class=\"number\">48</span>_binding.node</div></pre></td></tr></table></figure>\n<h2 id=\"安装失败后重新安装问题\"><a href=\"#安装失败后重新安装问题\" class=\"headerlink\" title=\"安装失败后重新安装问题\"></a><strong>安装失败后重新安装问题</strong></h2><p>之前安装失败，再安装就不去下载了，怎么办呢？那就先卸载再安装：</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm uninstall <span class=\"keyword\">node</span><span class=\"title\">-sass</span></div><div class=\"line\">npm i <span class=\"keyword\">node</span><span class=\"title\">-sass</span> --<span class=\"attr\">sass_binary_site=</span>https://npm.taobao.org/mirrors/<span class=\"keyword\">node</span><span class=\"title\">-sass</span>/</div></pre></td></tr></table></figure>\n<h2 id=\"相关错误提示\"><a href=\"#相关错误提示\" class=\"headerlink\" title=\"相关错误提示\"></a><strong>相关错误提示</strong></h2><p>提示没有安装python、build失败等，如：</p>\n<figure class=\"highlight taggerscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\">gyp ERR! configure error</div><div class=\"line\">gyp ERR! stack Error: Can't find Python executable \"C:<span class=\"symbol\">\\U</span>sers<span class=\"symbol\">\\z</span>huon<span class=\"symbol\">\\A</span>ppData<span class=\"symbol\">\\L</span>ocal<span class=\"symbol\">\\P</span>rograms<span class=\"symbol\">\\P</span>ython<span class=\"symbol\">\\P</span>ython36<span class=\"symbol\">\\p</span>ython.EXE\", you can set the PYTHON env variable.</div><div class=\"line\">gyp ERR! stack     at PythonFinder.failNoPython (G:<span class=\"symbol\">\\W</span>orkspace<span class=\"symbol\">\\M</span>anYan<span class=\"symbol\">\\m</span>anyan-nav<span class=\"symbol\">\\n</span>ode_modules<span class=\"symbol\">\\n</span>ode-gyp<span class=\"symbol\">\\l</span>ib<span class=\"symbol\">\\c</span>onfigure.js:483:19)</div><div class=\"line\">gyp ERR! stack     at PythonFinder.&lt;anonymous&gt; (G:<span class=\"symbol\">\\W</span>orkspace<span class=\"symbol\">\\M</span>anYan<span class=\"symbol\">\\m</span>anyan-nav<span class=\"symbol\">\\n</span>ode_modules<span class=\"symbol\">\\n</span>ode-gyp<span class=\"symbol\">\\l</span>ib<span class=\"symbol\">\\c</span>onfigure.js:508:16)</div><div class=\"line\">gyp ERR! stack     at G:<span class=\"symbol\">\\W</span>orkspace<span class=\"symbol\">\\M</span>anYan<span class=\"symbol\">\\m</span>anyan-nav<span class=\"symbol\">\\n</span>ode_modules<span class=\"symbol\">\\g</span>raceful-fs<span class=\"symbol\">\\p</span>olyfills.js:284:29</div><div class=\"line\">gyp ERR! stack     at FSReqWrap.oncomplete (fs.js:152:21)</div><div class=\"line\">gyp ERR! System Windows_NT 10.0.15063</div><div class=\"line\">gyp ERR! command \"C:<span class=\"symbol\">\\\\</span>dev<span class=\"symbol\">\\\\</span>nodejs<span class=\"symbol\">\\\\</span>node.exe\" \"G:<span class=\"symbol\">\\\\</span>Workspace<span class=\"symbol\">\\\\</span>ManYan<span class=\"symbol\">\\\\</span>manyan-nav<span class=\"symbol\">\\\\</span>node_modules<span class=\"symbol\">\\\\</span>node-gyp<span class=\"symbol\">\\\\</span>bin<span class=\"symbol\">\\\\</span>node-gyp.js\" \"rebuild\" \"--verbose\" \"--libsass_ext=\" \"--libsass_cflags=\" \"--libsass_ldflags=\"</div><div class=\"line\">\"--libsass_library=\"</div><div class=\"line\">gyp ERR! cwd G:<span class=\"symbol\">\\W</span>orkspace<span class=\"symbol\">\\M</span>anYan<span class=\"symbol\">\\m</span>anyan-nav<span class=\"symbol\">\\n</span>ode_modules<span class=\"symbol\">\\n</span>ode-sass</div><div class=\"line\">gyp ERR! node -v v8.4.0</div><div class=\"line\">gyp ERR! node-gyp -v v3.6.2</div><div class=\"line\">gyp ERR! not ok</div><div class=\"line\">Build failed</div><div class=\"line\">npm WARN co-mocha@1.2.0 requires a peer of mocha@&gt;=1.18 &lt;4 but none was installed.</div><div class=\"line\">npm WARN egg-restapi-module-tool@1.0.0 No repository field.</div><div class=\"line\">npm WARN egg-restapi-module-tool@1.0.0 scripts['server'] should probably be scripts['start'].</div><div class=\"line\"></div><div class=\"line\">npm ERR! code ELIFECYCLE</div><div class=\"line\">npm ERR! errno 1</div><div class=\"line\">npm ERR! node-sass@3.8.0 postinstall: `node scripts/build.js`</div><div class=\"line\">npm ERR! Exit status 1</div><div class=\"line\">npm ERR!</div><div class=\"line\">npm ERR! Failed at the node-sass@3.8.0 postinstall script.</div><div class=\"line\">npm ERR! This is probably not a problem with npm. There is likely additional logging output above.</div><div class=\"line\"></div><div class=\"line\">npm ERR! A complete log of this run can be found in:</div><div class=\"line\">npm ERR!     D:<span class=\"symbol\">\\n</span>odejs<span class=\"symbol\">\\c</span>ache<span class=\"symbol\">\\_</span>logs<span class=\"symbol\">\\2</span>017-09-02T16_06_24_298Z-debug.log</div></pre></td></tr></table></figure>\n<blockquote>\n<p>主要转自：<a href=\"https://lzw.me/a/node-sass-install-helper.html\" target=\"_blank\" rel=\"external\">志文工作室</a><br>其它参考：<br><a href=\"https://github.com/lmk123/blog/issues/28\" target=\"_blank\" rel=\"external\">https://github.com/lmk123/blo…</a><br><a href=\"https://segmentfault.com/q/1010000010069879\" target=\"_blank\" rel=\"external\">https://segmentfault.com/q/10…</a></p>\n</blockquote>\n"}